doctype html
html
  head
    title Employee List
    link(rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css')
    link(rel='stylesheet' href='https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css')
    script(src='https://code.jquery.com/jquery-3.7.1.min.js')
    script(src='https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js')
    script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js')
    script.
      $(document).ready(function () {
        const table = $('#employeeTable').DataTable();

        $('#statusFilter').on('change', function () {
          const value = $(this).val();
          if (value) {
            table.column(4).search('^' + value + '$', true, false).draw(); // Exact match in "Status" column (index 2)
          } else {
            table.column(4).search('').draw();
          }
        });

        $('.edit-btn').click(function () {
          const EmpID = $(this).data('empid');
          const EmpName = $(this).data('empname');
          const EmpMobile = $(this).data('empmobile');
          const EmpEmail = $(this).data('empemail');

          $('#editEmpID').val(EmpID);
          $('#editEmpName').val(EmpName);
          $('#editEmpMobile').val(EmpMobile);
          $('#editEmpEmail').val(EmpEmail);
          const modal = new bootstrap.Modal(document.getElementById('editModal'));
          modal.show();
        });

        $('.view-btn').click(function () {
          const EmpID = $(this).data('empid');
          const EmpName = $(this).data('empname');
          const EmpMobile = $(this).data('empmobile');
          const EmpEmail = $(this).data('empemail');
          debugger;
          $('#viewEmpID').val(EmpID);
          $('#viewEmpName').val(EmpName);
          $('#viewEmpMobile').val(EmpMobile);
          $('#viewEmpEmail').val(EmpEmail);

          const modal = new bootstrap.Modal(document.getElementById('viewModal'));
          modal.show();

          EmpAssetCall(EmpID);
        });

        $('.assign-btn').click(function () {
          const EmpID = $(this).data('empid');

          $('#editAssignEmpID').val(EmpID);
          const modal = new bootstrap.Modal(document.getElementById('assignModal'));
          modal.show();
        });

      });





  body(class='bg-light')
    .container.mt-5
      .card.shadow
        .card-header.bg-primary.text-white.d-flex.justify-content-between.align-items-center
          h2.mb-0 Employees List
          .div
            a.btn.btn-light.btn-sm.mx-2(href='/main/assets') View Assets
            button.btn.btn-light.btn-sm(data-bs-toggle='modal' data-bs-target='#addModal') + Add Employee

        .card-body
        label.form-label(for='statusFilter') Filter by Status:
          select#statusFilter.form-select(style='width: 200px; display: inline-block; margin-left: 10px;')
            option(value='') All
            option(value='Active') Active
            option(value='Inactive') Inactive

        table#employeeTable.table.table-bordered.table-striped
          thead
            tr
              th EmpID
              th EmpName
              th EmpMobile
              th EmpEmail
              th Status
              th Actions
          tbody
            each user in employees
              tr
                td= user.EmpID
                td= user.EmpName
                td= user.EmpMobile
                td= user.EmpEmail
                td
                  button.btn(
                    class=user.isActive ? 'btn-success' : 'btn-danger',
                    type='button',
                    data-EmpID=user.EmpID,
                    data-EmpName=user.EmpName,
                    data-EmpMobile=user.EmpMobile,
                    data-EmpEmail=user.EmpEmail,
                    data-status=user.isActive ? 'active' : 'inactive',
                    onclick='toggleStatus(event)'
                  )= user.isActive ? 'Active' : 'Inactive'
                td
                  button.btn.btn-sm.view-btn(
                    class='btn-success mx-2',
                    type='button',
                    data-EmpID=user.EmpID,
                    data-EmpName=user.EmpName,
                    data-EmpMobile=user.EmpMobile,
                    data-EmpEmail=user.EmpEmail,
                  ) View/Return Asset
                  button.btn.btn-warning.btn-sm.assign-btn.mx-2(type='button',data-EmpID=user.EmpID) Issue Asset
                  button.btn.btn-warning.btn-sm.edit-btn(
                    type='button',
                    data-EmpID=user.EmpID,
                    data-EmpName=user.EmpName,
                    data-EmpMobile=user.EmpMobile,
                    data-EmpEmail=user.EmpEmail,
                  ) Edit

        .card-footer.text-end
          a.btn.btn-secondary(href='/') Back to Home

    // Add User Modal
    .modal.fade#addModal(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            h5.modal-title Add Employee
            button.btn-close(type='button' data-bs-dismiss='modal')
          form(action='/main/employees/add' method='post')
            .modal-body
              .mb-3
                label.form-label(for='EmpName') Employee Name
                input.form-control(type='text' name='EmpName', required)
              .mb-3
                label.form-label(for='EmpMobile') Employee Mobile
                input.form-control(type='number' name='EmpMobile', required)
              .mb-3
                label.form-label(for='EmpEmail') Email
                input.form-control(type='EmpEmail' name='EmpEmail', required)
            .modal-footer
              button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Add

    // Edit User Modal
    .modal.fade#editModal(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            h5.modal-title Edit Employee
            button.btn-close(type='button' data-bs-dismiss='modal')
          form(action='/main/employees/edit' method='post')
            .modal-body
              input(type='hidden' id='editEmpID' name="EmpID")
              .mb-3
                label.form-label(for='editEmpName') Employee Name
                input.form-control(type='text' id="editEmpName" name='EmpName', required)
              .mb-3
                label.form-label(for='editEmpMobile') Employee Mobile
                input.form-control(type='number' id="editEmpMobile" name='EmpMobile', required)
              .mb-3
                label.form-label(for='editEmpEmail') Email
                input.form-control(type='EmpEmail' id="editEmpEmail" name='EmpEmail', required)
            .modal-footer
              button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Save

      // View User Modal
    .modal.fade#viewModal(tabindex='-1')
      .modal-dialog.modal-lg
        .modal-content
          .modal-header
            h5.modal-title View Employee
            button.btn-close(type='button' data-bs-dismiss='modal')
          form(action='/main/employees/View' method='post')
            .modal-body
              input(type='hidden' id='viewEmpID' name="EmpID")
              .mb-3
                label.form-label(for='viewEmpName') Employee Name
                input.form-control(type='text' id="viewEmpName" name='EmpName', readonly)
              .mb-3
                label.form-label(for='viewEmpMobile') Employee Mobile
                input.form-control(type='number' id="viewEmpMobile" name='EmpMobile', readonly)
              .mb-3
                label.form-label(for='viewEmpEmail') Email
                input.form-control(type='EmpEmail' id="viewEmpEmail" name='EmpEmail', readonly)
          .mb-3
            h6.modal-tittle.mb-3 Holding Assets
            div.table-responsive
              table#ViewAssetTable.table.table-bordered.table-striped(width='100%')
                thead
                  tr
                    th AssetSerial
                    th AssetName
                    th AssetType
                    th Make
                    th Model
                    th PurchaseAmount
                    th PurchaseDate
                    th Branch
                    th Actions
                tbody

            .modal-footer
              button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Close

    // Return Asset
    .modal.fade#returnasset(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            h5.modal-title Reason
            button.btn-close(type='button' data-bs-dismiss='modal')
          form(action='' method='post')
            .modal-body
              input(type='hidden' id='editReturnAssetSerial' name="AssetSerial")
              input(type='hidden' id='ReturnAssetempid' name="EmpID")
              .mb-3
                label.form-label(for='ReturnReason') Reason
                input.form-control(type='text' name='ReturnReason' id='ReturnReason', required)
            .modal-footer
              button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Cancel
              button.btn.btn-primary(type='button' onclick="ReturnAsset(event)") Save   

    // Assign Asset
    .modal.fade#assignModal(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            h5.modal-title Issue Asset
            button.btn-close(type='button' data-bs-dismiss='modal')
          form(action='/main/assignemployee' method='post')
            .modal-body
              input(type='hidden' id='editAssignEmpID' name="EmpID")
              .mb-3
                label.form-label(for='AssetSerial') Asset
                select.form-select(name='AssetSerial' id='editAssignAssetSerial', required)
                  option(disabled selected value='') -- Select Asset --
                  each data in Asset
                    option(value=data.AssetSerial)= data.AssetName + ' - ' + data['BranchDetails.Branchname']
            .modal-footer
              button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Save           

script.
  function toggleStatus(event) {
    const button = event.target;  
    const userId = $(button).data('empid');
    const currentStatus = $(button).data('status');

    $.ajax({
      url: '/main/employees/toggle-status', 
      method: 'POST',
      data: { EmpID: userId, status: currentStatus },
      success: function(response) {
        if (currentStatus === 'active') {
          $(button).removeClass('btn-success').addClass('btn-danger').text('Inactive');
          $(button).data('status', 'inactive');
        } else {
          $(button).removeClass('btn-danger').addClass('btn-success').text('Active');
          $(button).data('status', 'active');
        }
      },
      error: function(xhr, status, error) {
        console.error('Error updating status:', xhr.responseJSON.message);
        alert(xhr.responseJSON.message);
      }
    });
  }

  function ReturnAsset(e) {

    e.preventDefault();
    debugger;
    const formData = {
      AssetSerial: $('#editReturnAssetSerial').val(),
      ReturnReason: $('#ReturnReason').val()
    };

    $.ajax({
      url: '/main/ReturnAsset',
      method: 'POST',
      data: formData,
      success: function (response) {
        alert('Asset returned successfully');
        $('#returnasset').modal('hide');
        EmpAssetCall($('#ReturnAssetempid').val());
      },
      error: function (xhr) {
        alert('Error: ' + xhr.responseText);
      }
    });
  }

  function EmpAssetCall(EmpID){
    if ($.fn.DataTable.isDataTable('#ViewAssetTable')) {
      $('#ViewAssetTable').DataTable().clear().destroy();
    }

    $('#ViewAssetTable').DataTable({
      scrollX: true,
      paging: true,
      searching: true,
      ajax: {
        url: '/main/employeeAssetview',
        data: { empId: EmpID }, 
        dataSrc: ''
      },
      columns: [
        { data: 'AssetSerial' },
        { data: 'AssetName' },
        { data: ['AssetCategoryDetails.Category'] },
        { data: 'Make' },
        { data: 'Model' },
        { data: 'PurchaseAmount' },
        { data: 'PurchaseDate' },
        { data: ['BranchDetails.Branchname'] },
        {
          data: 'AssetSerial',
          render: function (data, type, row) {
            return `<button class="btn btn-danger btn-sm" data-id="${row.id}" data-EmpID="${row.EmpID}" data-assetserial="${row.AssetSerial}" onclick="openReturnModal(event)">Return</button>`;
          }
        }
      ]
    });
  }

  function openReturnModal(assetSerial) {
  const button = event.target; 
  const AssetSerial = $(button).data('assetserial');
  const EmpID = $(button).data('empid');

  $('#editReturnAssetSerial').val(AssetSerial);
  $('#ReturnAssetempid').val(EmpID);

  const modal = new bootstrap.Modal(document.getElementById('returnasset'));
  modal.show();
  }
